// WARNING: DO NOT EDIT. This file was generated by a program.
// See $MOJO_SDK/tools/bindings/mojom_bindings_generator.py.

library surface_id_mojom;
import 'package:mojo/bindings.dart' as bindings;




class SurfaceId extends bindings.Struct {
  static const List<bindings.StructDataHeader> kVersions = const [
    const bindings.StructDataHeader(16, 0)
  ];
  int local = 0;
  int idNamespace = 0;

  SurfaceId() : super(kVersions.last.size);

  SurfaceId.init(
    int this.local, 
    int this.idNamespace
  ) : super(kVersions.last.size);

  static SurfaceId deserialize(bindings.Message message) =>
      bindings.Struct.deserialize(decode, message);

  static SurfaceId decode(bindings.Decoder decoder0) {
    if (decoder0 == null) {
      return null;
    }
    SurfaceId result = new SurfaceId();

    var mainDataHeader = bindings.Struct.checkVersion(decoder0, kVersions);
    if (mainDataHeader.version >= 0) {
      
      result.local = decoder0.decodeUint32(8);
    }
    if (mainDataHeader.version >= 0) {
      
      result.idNamespace = decoder0.decodeUint32(12);
    }
    return result;
  }

  void encode(bindings.Encoder encoder) {
    var encoder0 = encoder.getStructEncoderAtOffset(kVersions.last);
    const String structName = "SurfaceId";
    String fieldName;
    try {
      fieldName = "local";
      encoder0.encodeUint32(local, 8);
      fieldName = "idNamespace";
      encoder0.encodeUint32(idNamespace, 12);
    } on bindings.MojoCodecError catch(e) {
      bindings.Struct.fixErrorMessage(e, fieldName, structName);
      rethrow;
    }
  }

  String toString() {
    return "SurfaceId("
           "local: $local" ", "
           "idNamespace: $idNamespace" ")";
  }

  Map toJson() {
    Map map = new Map();
    map["local"] = local;
    map["idNamespace"] = idNamespace;
    return map;
  }
}



